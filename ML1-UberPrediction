import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
     

df = pd.read_csv('uber.csv')
df

df.head()

df.info()

df.describe()

df.drop(['Unnamed: 0','key'], axis = 1, inplace = True)
     
df.isnull().sum()

df['dropoff_latitude'].fillna(value = df['dropoff_latitude'].mean(), inplace = True)
df['dropoff_longitude'].fillna(value = df['dropoff_longitude'].mean(), inplace = True)
df['passenger_count'].fillna(value = df['passenger_count'].mean(), inplace = True)
     

df.isnull().sum()

df.dtypes

df = df.drop(['pickup_datetime'], axis = 1)
     

df.dtypes

df.plot(kind = "box", subplots = True, layout = (7,2), figsize=(15,20))

sns.heatmap(df.corr(),annot = True) #Correlation Heatmap

x = df.drop(['fare_amount'], axis = 1)
y = df['fare_amount']

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.30)
     

y_test

from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(x_train, y_train)

y_pred = model.predict(x_test)
y_pred

from sklearn import metrics
     

mse = metrics.mean_squared_error(y_test, y_pred)
print("mean squared errot : ", mse)

print("Root mean squared error : ",np.sqrt(mse))

r2 = metrics.r2_score(y_test, y_pred)
print("r2 score : ", r2)

from sklearn.ensemble import RandomForestRegressor
model = RandomForestRegressor()
model.fit(x_train, y_train)

y_pred  = model.predict(x_test)
y_pred

mse = metrics.mean_squared_error(y_test, y_pred)
print("mean squared errot : ", mse)

print("Root mean squared error : ",np.sqrt(mse))

r2 = metrics.r2_score(y_test, y_pred)
print("r2 score : ", r2)
